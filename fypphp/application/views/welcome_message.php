<!--

To FYP21,

welcome_message.php

PHP7 is used.

it 's a center for managing data flow and connection with server.
//this seem look faster :)

You might also welcome to use controller,model,view traditional appoarch

Best,
Gordon
-->
<!DOCTYPE html>
<html lang="en">

<?php
include "fitbit_updateServer.php";

$sqlForTodayPoint = $this->db->query("SELECT battle.* FROM battle inner join user_detail on user_detail.familyName = battle.attack_family where user_detail.name = '".$_SESSION["loginedName"]."' and battle.date = CURDATE() order by battle.date DESC LIMIT 1");
foreach($sqlForTodayPoint->result() as $row)
{
	$_SESSION["today_point"] = $row->point;
}







//last battle and related concepys

$sqlforlastbattle = $this->db->query("SELECT battle.* FROM battle inner join user_detail on user_detail.familyName = battle.attack_family where user_detail.name = '".$_SESSION["loginedName"]."' order by battle.date DESC LIMIT 1");
foreach($sqlforlastbattle->result() as $row)
{
    $_SESSION["datelr"] = $row->date;
	$_SESSION["af"] = $row->attack_family;
	$_SESSION["pointf"] = $row->point;
	$_SESSION["df"] = $row->defense_family;
	$_SESSION["award"] = $row->award_received;
}

// this part for redirect to whether family Create Page or family Home page


date_default_timezone_set("Asia/Hong_Kong");

$sqlMoneymoney = $this->db->query("SELECT g.* FROM game_family g inner join user_detail ON g.familyName = user_detail.familyName where user_detail.name = '".$_SESSION["loginedName"]."' ");
foreach($sqlMoneymoney->result() as $row)
{
	$_SESSION["money"] = $row->money;
}


//select ranking datum from your family
$monday =  date("Y-m-d", strtotime("this week monday"));
$sunday =  date("Y-m-d", strtotime("this week sunday"));

$rankForDash = 0 ;

$sqlforloginedRank = $this->db->query("SELECT * FROM user_detail where name = '".$_SESSION["loginedName"]."' ");
foreach($sqlforloginedRank->result() as $row)
{
$_SESSION["variableFamily"] = $row->familyName;
}

$sqlforRankingIndash = $this->db->query("SELECT familydetail.familyName,sum(point) as point, attack_family FROM battle JOIN familydetail ON battle.attack_family = familydetail.familyName WHERE date BETWEEN '$monday' AND '$sunday' GROUP BY attack_family ORDER BY sum(point) DESC");
$_SESSION["ranking"] = array();
foreach($sqlforRankingIndash->result() as $row)
{

	$_SESSION["ranking"][$rankForDash][0] = $row->attack_family;
	$_SESSION["ranking"][$rankForDash][1] = $row->point;
	$_SESSION["ranking"][$rankForDash][2] = $row->familyName;
	$rankForDash++;
}

for( $x = 0 ; $x < count($_SESSION["ranking"]); $x++)
{
	if(strcmp($_SESSION["variableFamily"] ,$_SESSION["ranking"][$x][2]) == 0 )
	{ // your family ranking
     $_SESSION["rankForpoint"] = $_SESSION["ranking"][$x][1];
	 $_rankforname =  $_SESSION["ranking"][$x][2];
	 $_rankreal     =  $x+1;
	 $_SESSION["rankreal"] = $x + 1;
	}
}




$_SESSION["USERINFOGALLERY"] = array();

$sqlforpage1 = $this->db->query("SELECT * FROM user where name = '".$_SESSION["loginedName"]."'");
foreach($sqlforpage1->result() as $row)
{
	$_SESSION["USERINFOGALLERY"][0] = $row->user_job;
	$_SESSION["USERINFOGALLERY"][1] = $row->dob;
	$_SESSION["USERINFOGALLERY"][2] = $row->gender;
	$_SESSION["USERINFOGALLERY"][2] = $row->message;
}




$_SESSION["defensemem"] = array();
$sqlForweapon = $this->db->query("SELECT * FROM equipment");
$_wea =  0 ;
foreach($sqlForweapon->result() as $row)
{
	$_SESSION["defensemem"][$_wea] = $row->job_name;
	$_wea++;
}




// redirect useful function
function Redirect($url, $permanent = false)
{
    if (headers_sent() === false)
    {
        header('Location: ' . $url, true, ($permanent === true) ? 301 : 302);
    }

    exit();
}


// family redirection 's part
$createdFamily = $this->db->query("SELECT * FROM family where name = '".$_SESSION["loginedName"]."'");

	if(empty($createdFamily->result()))
	{
		$_SESSION["FAMILYPAGEDET"] = true;
	}
    else
    {
		$_SESSION["FAMILYPAGEDET"] = false;
	}

// the part for  creating new family

if(isset($_SESSION["loginedName"]))
{

if(isset($_SESSION['family']) and isset($_SESSION["rightforfamily"]) and $_SESSION["rightforfamily"] == true)
{
$sqlfamilyinsert = "INSERT INTO family VALUE(?,?,?)";
$this->db->query($sqlfamilyinsert ,array($_SESSION["loginedName"],$_SESSION["parent"],$_SESSION["family"]));

$family_photo = NULL;

if(true)
{
	$family_photo = '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
rkJggg==
';

}

if(true)
{
	$family_background = "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
bTi6v4/oQcTP8/zo0aOzs7PD96vdv+q5z2T58lJKe5fjauOItmXs4YX5Oecoz1/b8Mknn9y9ezfV
2O12qUbbR2Kaptg88UPe9hw9Oztrb0QppcV02xP3DyZDQ4kC8BW1ydDyGby/einnXZlSSpFqq6dS
yq6W9oGdIpWacs6pbTuf5l2Zx3j+h+thrOSc26ZI2+12vV7t5nlX54gYxnEYhshRax0iWo3OUWuU
Gld3GHrJs7H5aD3XOkedW7jEHJFiNTy4PG8pkHKuKeYWbSm3OGgDv9ZDL578tc4bhxQR01xKmSNy
5JinbavqYcilTRBLHSJtT3Kttd0IPkcpZapzqbVGKqvVajdvh1Wet7vz3fTq0Y3Y1bdef+NWpIgS
Y95FfPbw81zmcRxziVRrafdB3Yf7vCtzPni2y51Rl+Z71pwjnrwhUyuv9clRrXWe6zzPOSKnnFc5
r4fLaXo2Q19Qom1E3ia1NUdNaVvmaapDTqXMkSLnXHOkzWqodVv2M8J28Jet9dPV1vHPfpfD+eXy
xr3gmvrDJ7/sML9U+/JeL7+e8+HXRlytIq11nucakWJIqUaJUqPW4YmvbenZ9qg63CPsqe9y3VP9
blGiAHwly0f+4anPWmsaHo+Iao1hGMZhXEKhRr2qxTqluZQyXj/mWb4q59zuRlNK2V3uUkp5yO05
zPM8pRoRwzgucRD7qIqIKC+5rm4/Vxvysj5vLiUiVqvVEgSlPv5GywK+JUmXI3Pdccs57xulTdFq
TinVVEspw9XBbEe1lLLbTRExpDan3H/fnHNKOa6u0G+NfnJ8YxiGN7//ZkTUeU4plaHcv38/Xe0n
2q4lj4hot3Vqv3+QZVd/Z/+KXuq4tdP6OfIwDMuND2qtX+4Km+Vl1rpfUPn44Jey7Lo6TVMZHnfk
wVuf2pizfdVhei4LVdt9p9qP0Ate77KoYHlDlye2/P51Z/YPLbPVpSkjYhiGOebDf8612efyJOPJ
gv8yh/LbSokC8JUsmXj4Oyml3C4Kabf2ybXW6bzsF8DtB111/1l+NAwppXn3/NlbHAyillWGpZRp
1botaq2l1kiRxjGltCtz5Eg1lbbBY63pIOm+uHq0mvcpWUstpZZ2i/Hc+qGUWmtJkfI+TYarOdYy
Fj1IqOcrbbh3teKyRIkadcg1pRxpnucx0jCOaSqp1Fv5uJSySyUitnmuteYxDUOOOba73Y1hvT27
fGN1a46j+e8v/+zP/ulJLTFtp1W+nC/vxtnHZ/fHG3me5s04lFLmVGutU6opRZ4fn/c/HO/Fi6On
5uWZty/eH98xR8RcS0RETZGitXJOT1RguloncO3jt4vFSnuekXLKKdVad1Frbif9a611HFIbh6er
jZqWB1jKcmm+wwRsl44tCwbau9YG/M99OodPdZnmHr7FT/VlOdiWdb/LRDtKq2G/MCNFqvufk2FI
Q9pfp3U4pj38xeE5h2sP2neQEgXgK7nuo7FcrfCLqznTOOZoN5zcX3hT98PLuaaUhvT8j6TlfvFP
feQvV1gvWdPCIo9DzrmdCc1XE8cvMkZ66lU8NUVb5mrttPuSBe1ZzfO8Xq2fipUXz8n20VNqurqm
KkWutU5XCxjmeV4NY6112u3aYsRSyjzEcleeUuZaay4ppdSWB5yenuacf/pHf/TWP3krdlOMY8S8
GTa/vfN2u/P7arUqZbe8usM7G60Obkn/VLq9lPbvhHjy9HHOuV5V67Pd9g8/2v4L9xPWcRzbvrDt
/7Yjc7TZLM/2sKSfHYK2N2UZ4S9N/EXmmk/96fITcvhDsv9r17yy/cy47Wtb96ty53keV8NTT2N5
woff9B/8ufrOUaIAfCWtLA8/g1sgtksx5mV2mFIaakqpDJFStEuNhqtSjOtjMV3tSH/4AZxzvpz2
RZVzjiGnlEqZU4oyzZGXy0fiqeB47uMf/t/laZzvtsuLat+61FprSUOOq5Q+fObPXmzeImMcr/mo
3c37RE6pnfedU21j15RSW0qwqmmaptUcP3zje0cPh7Ozs/vb85TS+StpjOE8z7VG1JQi4mJ4ZX18
o+bbN2//xZ/861txa86XQ0qfxPkudv/j43fLjRRTRI66KymlNrlMqUbU8Wqlbxxk4nIcrrs4Jl8T
QlcDv5bT0XaqL6Xkg5PaX6iiSs0554gUqZaaUkRKtda2PGM7T+3Y1pxSHk42J7vzi+XxDx9meevr
k6s5l/dreTJPLcp8SjrYQenwnyKHazDqwS1V8zUp2i7q35V5mqeIyEPOqzGlVLb7Ql0erf1b5XHa
Xr2cLxjx3xVKFICvpBVnvTpBv1Rpmx22X5erlZrLJcz7QddBiV73ybparZaLTg5roC3fjIh5nqfd
rtaax2EcxxL7y5/bydkXNOizDgupFU9EHK46feoMbPub7TW268TblC6uVmC+YEnAUjyPh2rt2v+2
9rTuHzkiNpvNj370o3/1s1/ceXjnnTv/9969e2f1Ua01cqSUhjy0qNrtdm+99fOf/8nPb8SqRh2G
cZp2eczvvvduu6j/ldsnZ2dn64N557Qvp/2BPSzpLzgjfNb45DrdZfg6T9Py+Olgxep1785yqNPV
yfTDZxVXl6/tdrvtdtuOdhwMKZfHOfymyytqs8blwqDl/bru8qxnH2f5F1cctOlh0F/3up7aTmH5
mRkO3pd6sPZ0+c9qecA/mGloYz9RAL4RQ4m4ugK65LL8umkTtVzy8uv55ZZx7l33mbyv24M/ri85
QnrxI391Q30cPft1ou3WlDltt9uT9WaaptfXJ2dnZ5uS/uov/+pn9c2c8jbqLnYfPfj0008/vfvw
99M01Tlu3br1R9//ye3bt1/Pr8XVkX+YTyPiP3/+zttvv/3ZeL5er4eLXUppKHNETLl9x4iIcc7x
8sfn+mNbnvtobc/Rr+PxI558d75rs8Gv5/j8wTATBYBvkbZ7aDt9/Gj3qJTy6muvH8VRTnmap22e
hzT84LUf/OC1H+xirlFzu6NmDBFRatuuKEXELna/+e1vfv3Zb3a7XV7n7Xa7nstqter88uBJShSA
b8TVBLTE1XxreM6Ysc1Kv9w06Imd3p/yvI3yX3ImF88/UXvdFvz1S76KiOXa6oiI2J5f5JxTHo7W
m82wGsfx1u3b53F5FiUNwyaGiDiqU0TkWLUnGhElUop0mSKiPsxljvm/vPerD+588Lvh0epktZ13
KaWj1bjbbWvb92o/DY1YZtJfYbR4dUweT/tedKOCL6Y9q3LwaIdzxK8+8/6mPe8IfJ3H5w+GEgWA
b5F2Yfi8myLiYnex2+0u7j/86KOP/uL1X7z55ps/vv1mjpxTLrVEW9Q45Kh1rmXMY0Tcf3T/nd/+
9oMPPrgzfFhrPXrjKCLKdLler4cYLi8vh+Ef6Vlgvp2UKADfiP1M9IkJ0OGUMUdEORgGfr0jrfJM
br3sFOrZOVzzdc3e2krNdHD3nf3j1zrP81zLOI4x5tVmNabh9PLyP33639b316+tTjabzRsnt27f
vv29G7fW4/rho4ellM93Z/fu3btz/9PT09PtEOOt8SSN0zRtp23O+WYey3Yq03SchvMccTV/bQfp
S67QveY4PLtmtHnZdZCH91jaP/LBn37LBqDPUZ59is+Zhj79X8Q/QkoUAL5F6tWNf1JKbYesOUUp
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
";

}


$sqlForaddfamily = "INSERT INTO familydetail(name,familyName,familyphoto, family_background) VALUE(?,?,?,?)";
$this->db->query($sqlForaddfamily,array($_SESSION["loginedName"],$_SESSION["family"],$family_photo, $family_background));

$sqlForUpdateUser = "UPDATE user_detail SET familyName = ? where name = ?";
$this->db->query($sqlForUpdateUser,array($_SESSION["family"],$_SESSION["loginedName"]) );


$_SESSION["rightforfamily"] = false;
}


//check whether the logined user have family.



$familyarraysed = array();
$familyarraymod = array();
$familyarrayla = array();
$familyarrayma = array();

$calories = array();
$caloriesbmr = array();

$sql = $this->db->query("SELECT Fitbit_Activity.* from user inner join family inner join Fitbit_Activity on family.name = user.name And user.fb_user_id = Fitbit_Activity.name where family.familyName = (SELECT family.familyName from user inner join family on family.name = user.name where user.name = '".$_SESSION["loginedName"]."') order by id");
$sql2 = $this->db->query("SELECT fitbit_summary.* from user inner join family inner join fitbit_summary on family.name = user.name And user.fb_user_id = fitbit_summary.name where family.familyName = (SELECT family.familyName from user inner join family on family.name = user.name where user.name = '".$_SESSION["loginedName"]."') order by id");

$i = 0 ;
$r = 0 ;

foreach($sql2->result() as $row)
{

$calories[$r] = $row->caloriesOut;
$caloriesbmr[$r] = $row->caloriesBMR;
$r++;
}

foreach($sql->result() as $row)
{
$familyarraysed[$i] = $row->sedentaryActive;
$familyarraymod[$i] = $row->moderatelyActive;
$familyarrayla[$i] = $row->lightlyActive;
$familyarrayma[$i] = $row->moderatelyActive;
$i++;
}

//after all the value extracted,start do analysis

$meansed = 0 ;
$meanmod = 0 ;
$meanla = 0;
$meanma = 0;


$meancaloriesbmr = 0;
$meancaloriesout = 0;



for($q = 0 ; $q < count($calories); $q++)
{
$meancaloriesout = $meancaloriesout  + $calories[$q];
$meancaloriesbmr = $meancaloriesbmr  + $caloriesbmr[$q] ;
}


for($j = 0 ; $j < count($familyarraysed) ; $j++)
{
$meansed = $meansed + $familyarraysed[$j];
$meanmod = $meanmod + $familyarraymod[$j];
$meanla  = $meanla  + $familyarrayla[$j];
$meanma = $meanma   + $familyarrayma[$j];
}

if(count($familyarraysed)>0 ){
$_SESSION["MEANCALO"] = $meancaloriesout / count($calories);
$_SESSION["MEANCALBMR"] = $meancaloriesbmr / count($calories);
$_SESSION["MEANSED"] = $meansed/count($familyarraysed);
$_SESSION["MEANMOD"] = $meanmod/count($familyarraysed);
$_SESSION["MEANLA"]  = $meanla /count($familyarraysed);
$_SESSION["MEANMA"]  = $meanma /count($familyarraysed);
}

}


//update the user information if user login because the access token is used OAuth form and would be failed at soon.
if(isset($_SESSION["loginedName"])){

if(isset($_SESSION["access_token"]) && strlen($_SESSION["access_token"]) > 0 )
{
$sql2 = $this->db->query("UPDATE user set fb_access_token = '".$_SESSION["access_token"]."' where name = '".$_SESSION["loginedName"]."';");
}

}



$family_user = array();

$_SESSION["vActiveArr"] = array();
$_SESSION["sActiveArr"] = array();
$_SESSION["lActiveArr"] = array();
$_SESSION["mActiveArr"] = array();



//logined detail for users.
if(isset($_SESSION["loginedName"]))
{
$sqlfind = $this->db->query("SELECT * from user where name = '".$_SESSION["loginedName"]."'");
foreach($sqlfind->result() as $row)
{
$search = $row->fb_user_id;
}


$sql4 = $this->db->query("SELECT * from Fitbit_Activity where name = '".$search."' ORDER BY id DESC LIMIT 1");
foreach($sql4->result() as $row)
{
$_SESSION["vActiveY"] = $row->veryActive;
$_SESSION["sActiveY"] = $row->sedentaryActive;
$_SESSION["lActiveY"] = $row->lightlyActive;
$_SESSION["mActiveY"] = $row->moderatelyActive;
}

$sql5 = $this->db->query("SELECT * from fitbit_summary where name = '".$search."' ORDER BY id DESC LIMIT 1");


foreach($sql5->result() as $row)
{
$_SESSION["activityCaloriesU"] = $row->activityCalories;
$_SESSION["caloriesBMRU"] = $row->caloriesBMR;
$_SESSION["caloriesOutU"] = $row->caloriesOut;
$_SESSION["elevationU"] = $row->elevation;
}



}


//load back searched people information,for example you search gavin and the result shouldbe return back to gavin.
if(isset($_SESSION["searchName"]))
{
$sqlfind = $this->db->query("SELECT * from user where name = '".$_SESSION["searchName"]."'");
foreach($sqlfind->result() as $row)
{
$search = $row->fb_user_id;
}

$sql4 = $this->db->query("SELECT * from Fitbit_Activity where name = '".$search."' ORDER BY id DESC LIMIT 1");
foreach($sql4->result() as $row)
{
$_SESSION["vActiveS"] = $row->veryActive;
$_SESSION["sActiveS"] = $row->sedentaryActive;
$_SESSION["lActiveS"] = $row->lightlyActive;
$_SESSION["mActiveS"] = $row->moderatelyActive;
}


$sql5 = $this->db->query("SELECT * FROM fitbit_summary where name = '".$search."'  ORDER BY id DESC LIMIT 1");
foreach ($sql5->result() as $row)
{

$_SESSION["activityCaloriesS"] = $row->activityCalories;
$_SESSION["caloriesBMRS"] = $row->caloriesBMR;
$_SESSION["caloriesOutS"] = $row->caloriesOut;
$_SESSION["elevationS"] = $row->elevation;

}


}

$_SESSION["oldsync"] = array();

//before last sync , store it old value


$_SESSION["lastsyncentry"] = true;
//last sync set
$sql3 = $this->db->query("SELECT * FROM user");
$sqlcheck = $this->db->query("SELECT * FROM user WHERE cast(lastsync as date) = cast(now() as date)");
if(empty($sqlcheck->result() ))
{
$i = 0 ;
foreach($sql3->result() as $row)
{//please click 2 times to ensure the date different
   $_SESSION["oldsync"][$i] = $row->lastsync;
   $i++;
}
}




if(isset($_SESSION["lastsyncentry"]))
$_SESSION["lastsyncentry"] = false;


if(isset($_SESSION["lastsyncVal"]))
{

$sql5 = $this->db->query("SELECT * FROM user");
$i = 0 ;
foreach($sql5->result() as $row)
{
   $tmpmember[$i] = $row->name;
   $i++;
}


for($j = 0 ; $j < count($tmpmember) ; $j++)
{
$sql2 = "UPDATE user set lastsync = ? where name = ? "; // ***** change it to update the value inside user data table
$this->db->query($sql2,array($_SESSION["lastsyncVal"][$j] ,$tmpmember[$j]));
}

}



if(isset($_SESSION["loginedName"]))
{

$selfsql = $this->db->query("SELECT fitbit_summary.* from fitbit_summary inner join user on user.fb_user_id = fitbit_summary.name where user.name = '".$_SESSION['loginedName']."' order by fitbit_summary.updatedDate desc LIMIT 1");
foreach($selfsql->result() as $row )
{
$_SESSION["stepArrS"] = $row->step;
$_SESSION["floorArrS"] = $row->floors;
$_SESSION["activityCaloriesArrS"] = $row->activityCalories;
$_SESSION["caloriesBMRArrS"] = $row->caloriesBMR;
$_SESSION["caloriesOutArrS"] = $row->caloriesOut;
$_SESSION["elevationArrS"] = $row->elevation;
$_SESSION["fatburnArrS"] = $row->fatburn;
$_SESSION["fatburnCalArrS"] = $row->fatburnCalories;
$_SESSION["cardioArrS"] = $row->cardio;
$_SESSION["cardioCalArrS"] = $row->cardioCalories;
$_SESSION["oorArrS"] = $row->oor;
$_SESSION["oorCalArrS"] = $row->oorCalories;

}

$sqlhaha = $this->db->query("SELECT family.* FROM user inner join family where user.name = '".$_SESSION['loginedName']."' ");
foreach($sqlhaha->result() as $row)
{
	$_SESSION["gilbert"] = $row->familyName;
}



//check the logined 's user family member 's information
$sql3 = $this->db->query("SELECT user.* from user inner join family on family.name = user.name where family.familyName = (SELECT family.familyName from user inner join family on family.name = user.name where user.name = '".$_SESSION['loginedName']."')");
$counter = 0 ;
foreach($sql3->result() as $row)
{
$family_user[$counter] = $row->fb_user_id;
$family_user_name[$counter] = $row->name;
$counter++;
}


$_SESSION["fusr"] = 0 ;


if (count($family_user) > 1 )
{
$_SESSION["fusr"] = $family_user;
$_SESSION["fusr2"] = $family_user_name;
//grabbed the family from recent user.

$tmpmember = array();


for($x = 0 ; $x < count($family_user)  ; $x++)
{

$sql4 = $this->db->query("SELECT * FROM Fitbit_Activity where name = '".$family_user[$x]."' ORDER BY id DESC LIMIT 1 ");
foreach($sql4->result() as $row)
{
//for chart part
$_SESSION["vActiveArr"][$x] = $row->veryActive;
$_SESSION["sActiveArr"][$x] = $row->sedentaryActive;
$_SESSION["lActiveArr"][$x] = $row->lightlyActive;
$_SESSION["mActiveArr"][$x] = $row->moderatelyActive;

}

$_SESSION["stepArr"] = array();
$_SESSION["floorArr"] = array();
$_SESSION["activityCaloriesArr"] = array();
$_SESSION["caloriesBMRArr"] = array();
$_SESSION["caloriesOutArr"] = array();

}

$_SESSION["fatburnArr"] = array();
$_SESSION["fatburnCalArr"] = array();
$_SESSION["cardioArr"] = array();
$_SESSION["cardioCalArr"] = array();
$_SESSION["oorArr"] = array();
$_SESSION["oorCalArr"] = array();


for($x = 0 ; $x < count($family_user) ; $x++)
{
$sql5 = $this->db->query("SELECT * FROM fitbit_summary where name = '".$family_user[$x]."' ORDER BY id DESC LIMIT 1 ");

foreach($sql5->result() as $row)
{
//this are the data easily have huge amount and big change
$_SESSION["stepArr"][$x] = $row->step;
$_SESSION["floorArr"][$x] = $row->floors;
$_SESSION["activityCaloriesArr"][$x] = $row->activityCalories;
$_SESSION["caloriesBMRArr"][$x] = $row->caloriesBMR;
$_SESSION["caloriesOutArr"][$x] = $row->caloriesOut;
$_SESSION["elevationArr"][$x] = $row->elevation;
$_SESSION["fatburnArr"][$x] = $row->fatburn;
$_SESSION["fatburnCalArr"][$x] = $row->fatburnCalories;
$_SESSION["cardioArr"][$x] = $row->cardio;
$_SESSION["cardioCalArr"][$x] = $row->cardioCalories;
$_SESSION["oorArr"][$x] = $row->oor;
$_SESSION["oorCalArr"][$x] = $row->oorCalories;



}

}


}




}

//print_r($_SESSION["lActiveArr"]);

//After grab it and you use the datum for other real use.

if(isset($_SESSION["loginedName"]))
{

$sql4 = $this->db->query("SELECT fbg.* from user usr inner join fitbit_summary fbg ON fbg.name = usr.fb_user_id where usr.fb_user_id = '".$_SESSION['user_id']."'");
foreach($sql4->result() as $row)
{
$_SESSION["activeMinutes"] = $row->elevation;
$_SESSION["caloriesOut"] = $row->activityCalories;
$_SESSION["distance"] = $row->caloriesBMR ;
$_SESSION["step"] = $row->caloriesOut;
}


$sql5 = $this->db->query("SELECT fba.* from user usr inner join Fitbit_Activity fba on fba.name = usr.fb_user_id where usr.fb_user_id = '".$_SESSION['user_id']."'");

foreach($sql5->result() as $row)
{

$_SESSION["VA"] = $row->veryActive;
$_SESSION["MA"] = $row->moderatelyActive;
$_SESSION["LA"] = $row->lightlyActive;
$_SESSION["SA"] = $row->sedentaryActive;
}


}


//checking the server sync time respectively,if sync time is over 3 days,just update the record in three time.

$tmpTimediffuser = array();


$qpeople = 0 ;
$sqlFortimediff = $this->db->query("SELECT * FROM user");
foreach($sqlFortimediff->result() as $row)
{
$tmpTimediffuser[$qpeople][0] = $row->lastsync;
$tmpTimediffuser[$qpeople][1] = $row->fb_user_id;
$qpeople++;
}

for($tmpVal  = 0 ; $tmpVal < count($tmpTimediffuser) ; $tmpVal++)
{

//$sql6 = $this->db->query("SELECT * FROM `user` WHERE cast(lastsync as date) = cast(now() as date)");



}






//insert Or update data that recently update from the server,Everyday the things that server should do.

if(isset($_SESSION["entryFordata"]) && $_SESSION["entryFordata"] == true)
{
//HELP  !!!!! IMPORTANT,I ASSUME ALL DATUM WOULD ONLY RUN ONCE.SO THAT I JUST SEARCH SQL IN ACTIVITY SIDE
$sql5 = $this->db->query("SELECT * FROM `Fitbit_Activity` WHERE cast(dateUpdate as date) = cast(now() as date)");

if(empty($sql5->result() )) // check today 's result whether implement or not.
{
$count = count($_SESSION["resultServer"]) - 1 ;
//echo $count;
for($x = 0  ; $x <= $count ; $x++)
{
// for linked data

if(isset($_SESSION["Usummary"][$x][13]) && isset($_SESSION["fatburn"][$x]["minutes"]) ){
if(strlen($_SESSION["Usummary"][$x][13]) > 0 && strlen($_SESSION["fatburn"][$x]["minutes"]) > 0 )
{// if user has ping the datum to fitbit app
$sql2 = "INSERT INTO fitbit_summary VALUE(0,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,now(),now(),0,0)";
$this->db->query($sql2,array($_SESSION["Arruid"][$x],$_SESSION["Usummary"][$x][13],$_SESSION["Usummary"][$x][7],$_SESSION["Usummary"][$x][6],$_SESSION["Usummary"][$x][5],$_SESSION["Usummary"][$x][1],$_SESSION["Usummary"][$x][2],$_SESSION["Usummary"][$x][3],$_SESSION["fatburn"][$x]["minutes"],$_SESSION["cardio"][$x]["minutes"],$_SESSION["peak"][$x]["minutes"],$_SESSION["oor"][$x]["minutes"],$_SESSION["fatburn"][$x]["caloriesOut"],$_SESSION["cardio"][$x]["caloriesOut"],$_SESSION["peak"][$x]["caloriesOut"],$_SESSION["oor"][$x]["caloriesOut"]));
}
}
else{//else user didn 't ping the datum to fitbit app
$sql2 = "INSERT INTO fitbit_summary VALUE(0,?,?,?,?,?,?,?,0,0,0,0,0,0,0,0,now(),now(),0,0 )";
$this->db->query($sql2,array($_SESSION["Arruid"][$x],0,$_SESSION["Usummary"][$x][7],$_SESSION["Usummary"][$x][6],$_SESSION["Usummary"][$x][5],$_SESSION["Usummary"][$x][1],$_SESSION["Usummary"][$x][2],$_SESSION["Usummary"][$x][3]));
}

// for discrete data
$sql = "INSERT INTO Fitbit_Activity VALUE(0,?,?,?,?,?,now(),now())";
$this->db->query($sql,array($_SESSION["UVAdata"][$x],$_SESSION["UMAdata"][$x],$_SESSION["ULAdata"][$x],$_SESSION["USAdata"][$x],$_SESSION["Arruid"][$x] ));
}

$_SESSION["entryFordata"] = false;

}
else
{

//if(strlen($_SESSION["UVAdata"][0]) > 0)
//{
$count = count($_SESSION["resultServer"]) - 1 ;

for($x = 0  ; $x <= $count ; $x++)
{
//print_r ($_SESSION["Usummary"][$x][2]);
// for discrete data
$sql = "UPDATE Fitbit_Activity set veryActive = ? , moderatelyActive = ? , lightlyActive = ? , sedentaryActive = ? WHERE name = ? and cast(dateUpdate as date) = cast(now() as date) ";
$this->db->query($sql,array($_SESSION["UVAdata"][$x],$_SESSION["UMAdata"][$x],$_SESSION["ULAdata"][$x],$_SESSION["USAdata"][$x],$_SESSION["Arruid"][$x] ));


if(isset($_SESSION["Usummary"][$x][13]) && isset($_SESSION["fatburn"][$x]["minutes"]) )
{
if(strlen($_SESSION["Usummary"][$x][13]) > 0 && strlen($_SESSION["fatburn"][$x]["minutes"]) > 0 )
{//if user has ping the datum to fitbit app
$sql2 = "UPDATE fitbit_summary SET step = ? , floors = ? , elevation = ? , activityCalories = ? , caloriesBMR = ? , caloriesOut = ? , fatburn = ? , cardio = ? , peak = ? , oor = ? , fatburnCalories = ? , cardioCalories = ? , peakCalories = ? , oorCalories = ?  WHERE name = ? and cast(updatedDate as date) = cast(now() as date) ";
$this->db->query($sql2,array($_SESSION["Usummary"][$x][13],$_SESSION["Usummary"][$x][7],$_SESSION["Usummary"][$x][5],$_SESSION["Usummary"][$x][1],$_SESSION["Usummary"][$x][2],$_SESSION["Usummary"][$x][3],$_SESSION["fatburn"][$x]["minutes"],$_SESSION["cardio"][$x]["minutes"],$_SESSION["peak"][$x]["minutes"],$_SESSION["oor"][$x]["minutes"],$_SESSION["fatburn"][$x]["caloriesOut"],$_SESSION["cardio"][$x]["caloriesOut"],$_SESSION["peak"][$x]["caloriesOut"],$_SESSION["oor"][$x]["caloriesOut"],$_SESSION["Arruid"][$x]));
}
}

//else user didn 't ping the datum to fitbit app
//last 2 eight value all set to 0
else if(empty($_SESSION["Usummary"][$x][12]))
{
$sql2 = "UPDATE fitbit_summary SET step = ? , floors = ?  ,elevation = ? , activityCalories = ? , caloriesBMR = ? , caloriesOut = ? , fatburn = 0 , cardio = 0 , peak = 0 , oor = 0 , fatburnCalories = 0 , cardioCalories = 0 , peakCalories = 0 , oorCalories = 0  WHERE name = ? and cast(updatedDate as date) = cast(now() as date) ";
$this->db->query($sql2,array(0,$_SESSION["Usummary"][$x][7],$_SESSION["Usummary"][$x][5],$_SESSION["Usummary"][$x][1],$_SESSION["Usummary"][$x][2],$_SESSION["Usummary"][$x][3],$_SESSION["Arruid"][$x]));
}

}

}
$_SESSION["entryFordata"] = false;

}

//}



//After grab it and you use the datum for other real use.

if(isset($_SESSION["loginedName"]))
{

$sql4 = $this->db->query("SELECT fbg.* from user usr inner join fitbit_summary fbg ON fbg.name = usr.fb_user_id where usr.fb_user_id = '".$_SESSION['user_id']."'");
foreach($sql4->result() as $row)
{
$_SESSION["activeMinutes"] = $row->elevation;
$_SESSION["caloriesOut"] = $row->activityCalories;
$_SESSION["distance"] = $row->caloriesBMR ;
$_SESSION["step"] = $row->caloriesOut;
}


$sql5 = $this->db->query("SELECT fba.* from user usr inner join Fitbit_Activity fba on fba.name = usr.fb_user_id where usr.fb_user_id = '".$_SESSION['user_id']."'");

foreach($sql5->result() as $row)
{

$_SESSION["VA"] = $row->veryActive;
$_SESSION["MA"] = $row->moderatelyActive;
$_SESSION["LA"] = $row->lightlyActive;
$_SESSION["SA"] = $row->sedentaryActive;
}


}


//ACCESS TOKEN AND USER_ID EXTRACTION FROM DATABASE
$_SESSION["Arruid"] = array() ;
$_SESSION["Arrat"] = array() ;
$sqlSu = $this->db->query("SELECT * FROM user");
foreach($sqlSu->result() as $row)
{

array_push($_SESSION["Arruid"],$row->fb_user_id);
array_push($_SESSION["Arrat"],$row->fb_access_token);

}


//Login Information
if(isset($_SESSION['user_id']))
{
$sql = $this->db->query("SELECT * FROM user WHERE fb_user_id = '".$_SESSION['user_id']."'");
foreach($sql->result() as $row)
{
$_SESSION["loginedName"] = $row->name;
}
}

//REGISTER DATA




//checking about data regsiter before
if(isset($_SESSION['user_id']))
{
//echo $_SESSION['user_id'];
$checksql = $this->db->query("SELECT * FROM user where name='".$_SESSION['loginedName']."'");
if(isset($_SESSION['Rname']) && $_SESSION["data"] = true )
{
$sql = "INSERT INTO user VALUE(?,?,?,?,?,?,?,?,?,?)";
$this->db->query($sql,array($_SESSION['Rname'],'M',date("Y-m-d h:i:sa"),$_SESSION['Rdate'],$_SESSION['Rcareer'],$_SESSION['Rweight'],$_SESSION['Rheight'],$_SESSION['Rintro'],$_SESSION['user_id'],$_SESSION['access_token']));
$personal_photo = NULL;
if(true)
{
	$personal_photo = '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
AABJRU5ErkJggg==';





}

$sqlFordetail = "INSERT INTO user_detail VALUE(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
$this->db->query($sqlFordetail, array($_SESSION['Rname'],'m',date("Y-m-d h:i:sa"),$_SESSION['Rdate'],$_SESSION['Rcareer'],$_SESSION['Rweight'],$_SESSION['Rheight'],$_SESSION['Rintro'],$_SESSION['user_id'],$_SESSION['access_token'],NULL,NULL,date("Y-m-d h:i:sa"),$personal_photo,NULL,'2017-01-01',NULL)    );

$sqlforresultdetail =  "INSERT INTO user_goal(fb_user_id, steps, floors, distance, activeMinutes, calories) VALUES(?, '10000', '10', '8.05' , '30', '2634')";
$this->db->query($sqlforresultdetail,$_SESSION['user_id']);

//$_SESSION["loginedName"] = $_SESSION['Rname'];
//$sql = "INSERT INTO user VALUE(?,?,?,?,?,?,?,?,?,?)";
//$this->db->query($sql,array($_SESSION['Rname'],'M', $_SESSION['Rcareer'],23,$_SESSION['Rweight'],$_SESSION['Rheight'],$_SESSION['Rintro'],10000,$_SESSION['user_id'],$_SESSION['access_token']));
$_SESSION["data"] = "full";
}

if(empty($checksql->result()))
{//jal register_page !!!!!
Redirect('/fypphp/register.php', false);
$_SESSION["login"] = "yes";
$_SESSION["data"] = true;
}
else
{
$_SESSION["login"] = "no";
$_SESSION["data"] = false;
}

}


//==============================================================
if(isset($_SESSION["goal"]))
{

//print_r($_SESSION["goal"]);
//print_r($_SESSION["goal"]);
//print_r($_SESSION["VAdata"]);
//print_r($_SESSION["LAdata"]);
//print_r($_SESSION["MAdata"]);
//print_r($_SESSION["SAdata"]);

//$valueUpdate = $this->db->query("UPDATE Fitbit_Activity VALUE(",);



}

if(isset($_SESSION["loginedName"])){
$loginedSQL =  $this->db->query("SELECT *,(veryActive+moderatelyActive+lightlyActive+sedentaryActive)/4 as mean FROM Fitbit_Activity WHERE name = '".$_SESSION['loginedName']."'");
foreach($loginedSQL->result() as $row)
{
    $_SESSION["LVA"] = $row->veryActive;
    $_SESSION["LMA"] = $row->moderatelyActive;
    $_SESSION["LLA"] = $row->lightlyActive;
    $_SESSION["LSA"] = $row->sedentaryActive;
    $_SESSION["LM"]  = $row->mean;
}
}

//query for searching your personal information :)
if(isset($_GET['page']))

{

//Family Searching :)
$sqlForFamily = $this->db->query("SELECT b.familyName FROM user usr INNER JOIN Family b ON usr.name = b.name where usr.name='".$_GET['page']."'");
foreach($sqlForFamily->result() as $row)
{
$_SESSION["searchFamily"] = $row->familyName;
}

if(empty($sqlForFamily->result()))
{
 $_SESSION["searchFamily"] = "No Family";
}

//personal profile
$sql2 = $this->db->query("SELECT * FROM user WHERE name = '".$_GET['page']."'");
foreach($sql2->result() as $row)
{
$_SESSION["searchGender"] = $row->gender;
//$_SESSION["searchAge"] = $row->user_age;
$_SESSION["searchWeight"] = $row->weight;
$_SESSION["searchHeight"] = $row->height;
$_SESSION["searchInfo"] = $row->message;
//$_SESSION["profit"] = $row->profit;
}


//rank , It ;s still problematics for SQL Error , Don 't know why :(


//$sqlrank = $this->db->query("SELECT * FROM (SELECT IF(@rownum = NULL, @rownum := 0 ,@rownum := @rownum + 1) AS rank,name FROM user ORDER BY profit DESC) as result WHERE name='".$_GET['page']."'");
//foreach($sqlrank->result() as $row)
//{
//$_SESSION["ranksearch"] = $row->rank;
//}


$sql3 = $this->db->query("SELECT COUNT(friend_name) as num from friend WHERE name = '".$_GET['page']."'");
foreach($sql3->result() as $row2){
$_SESSION["numFriend"] = $row2->num;
}

$sqlForpreventadded = $this->db->query("SELECT * FROM friend where name = '".$_SESSION['loginedName']."'");


//boolean variable for check family added
$_SESSION["addedfd"] = "no";
$_SESSION["addedfamily"] = "no";
$_SESSION["addedfamily2"] = "no";


$sqlForpreventaddFamily = $this->db->query("SELECT * FROM family where name = '".$_SESSION['loginedName']."'");

foreach($sqlForpreventaddFamily->result() as $rowF)//check whether have familyname or not for yourself
{
      $_SESSION["addedfamily2"] = "yet";
}


$sqlForpreventaddFamily2 = $this->db->query("SELECT * FROM family where name = '".$_GET['page']."'");
//  your searched user didn ;t have family



foreach($sqlForpreventaddFamily2->result() as $rowF)//check whether have familyname or not for yourself
{
      $_SESSION["addedfamily"] = "yet";
}


if(empty($sqlForpreventaddFamily2->result()))
{
  $_SESSION["addedfamily2"] = "yes";
}

//you didn 't have family
if(empty($sqlForpreventaddFamily->result()))
{
    $_SESSION["addedfamily"] = "yes";
}


foreach($sqlForpreventadded->result() as $rowC)//check whehther added friend
{
       if($rowC->friend_name == $_GET['page'])
       {
        $_SESSION["addedfd"] = "yes";
       }
}

}

if(isset($_SESSION["searchName"])){
$testtsql  = $this->db->query("SELECT * FROM friend where name = ('".$_SESSION['loginedName']."' and friend_name = '".$_SESSION['searchName']."') or ('".$_SESSION['searchName']."' and friend_name = '".$_SESSION['loginedName']."')");
if(empty($testtsql->result()))
$_SESSION["pass1"] = false;
}

//Invitation message for friend
if(isset($_POST["invit1"])&& $_SESSION["pass1"] == false )
{
$sql113 = "INSERT INTO message VALUE(?,?,?,?,?,0,0)";
$this->db->query($sql113,array($_SESSION["searchName"],$_SESSION["loginedName"],$_POST["invit1"],"Friend","Invitation From your friend"));

$sqlForaddfriend = "INSERT INTO friend VALUE(?,?)";
$this->db->query($sqlForaddfriend,array($_SESSION["loginedName"],$_SESSION["searchName"]));

$sqlForaddfriend2 = "INSERT INTO friend VALUE(?,?)";
$this->db->query($sqlForaddfriend2,array($_SESSION["searchName"],$_SESSION["loginedName"]));


$_SESSION["pass1"] = true;
}

//invitation message for family


if(isset($_SESSION["searchName"])){
$testttsql = $this->db->query("SELECT * FROM family where name = '".$_SESSION['searchName']."'" );
if(empty($testttsql->result()))
$_SESSION["pass2"] = false;
}


if(isset($_POST["invit2"]) && $_SESSION["pass2"]==false )
{

$sql = "INSERT INTO message VALUE(?,?,?,?,?,0,0)";
$this->db->query($sql,array($_SESSION["searchName"],$_SESSION["loginedName"],$_POST["invit2"],"Family","Added you into new family"));

$sqlForsearchMyfamily = $this->db->query("SELECT * FROM family where name = '".$_SESSION['loginedName']."'");
foreach($sqlForsearchMyfamily->result() as $rowC)
{
  $_SESSION["family"] = $rowC->familyName; //session var stored family name of loginedName
}


$sqlForaddfamily = "INSERT INTO family VALUE(?,0,?)";
$this->db->query($sqlForaddfamily,array($_SESSION["searchName"],$_SESSION["family"]));

$sqlupdateFamilyForusertable = "UPDATE user_detail SET familyName = ? where name = ? ";
$this->db->query($sqlupdateFamilyForusertable,array($_SESSION["family"],$_SESSION["searchName"])  );




$_SESSION["pass2"] = true;
}

//invitation message for family (being member of searched user)



//searching whehther family added or not
if(isset($_SESSION['loginedName']))
{
$testtttsql = $this->db->query("SELECT * FROM family where name = '".$_SESSION['loginedName']."'" );
if(empty($testtttsql->result()))
$_SESSION["pass3"] = false;
}


if(isset($_POST["invit3"]) && $_SESSION["pass3"]==false)
{
$_SESSION["family2"] = array();
$sql = "INSERT INTO message VALUE(?,?,?,?,?,0,0)";
$this->db->query($sql,array($_SESSION["searchName"],$_SESSION["loginedName"],$_POST["invit3"],"Family","A new member added into your family"));

$sqlForsearchMyfamily2 = $this->db->query("SELECT * FROM family where name = '".$_SESSION["searchName"]."'");
foreach($sqlForsearchMyfamily2->result() as $rowC)
{
  $_SESSION["family2"] = $rowC->familyName; //session var stored family name of loginedName
}

$sqlForaddfamily = "INSERT INTO family VALUE(?,0,?)";
$this->db->query($sqlForaddfamily,array($_SESSION["loginedName"],$_SESSION["family2"]));


$_SESSION["pass3"] = true;
}




//message push to noticebox and mailbox


if(isset($_GET['page']))
{
$_SESSION["poster"] = array();
$_SESSION["messagesend"] = array();
$_SESSION["sender"] = array();
$_SESSION["title"] = array();
$sqlformessage = $this->db->query("SELECT * FROM message where name = '".$_SESSION['loginedName']."' and type = '".$_GET["page"]."'");


$countmessage1 = $this->db->query("SELECT * FROM message where name = '".$_SESSION['loginedName']."' and type='Friend' ");
$countmessage2 = $this->db->query("SELECT * FROM message where name = '".$_SESSION['loginedName']."' and type='Family' ");
$countmessage3 = $this->db->query("SELECT * FROM message where name = '".$_SESSION['loginedName']."' and type='upgrade' ");
$countmessage4 = $this->db->query("SELECT * FROM message where name = '".$_SESSION['loginedName']."' and type='other' ");

$_SESSION["msg1"] = array();
$_SESSION["msg2"] = array();
$_SESSION["msg3"] = array();
$_SESSION["msg4"] = array();
foreach($countmessage1->result() as $row)
{
array_push($_SESSION["msg1"],$row->post_name);
}
foreach($countmessage2->result() as $row)
{
array_push($_SESSION["msg2"],$row->post_name);
}
foreach($countmessage3->result() as $row)
{
array_push($_SESSION["msg3"],$row->post_name);
}
foreach($countmessage4->result() as $row)
{
array_push($_SESSION["msg4"],$row->post_name);
}



foreach($sqlformessage->result() as $row)
{
array_push($_SESSION["poster"],$row->post_name);
array_push($_SESSION["messagesend"],$row->message);
array_push($_SESSION["sender"],$row->name);
array_push($_SESSION["title"],$row->title);
}


}




//query for update your information
 if (isset($_POST['action']))
 {
 $_SESSION['name2'] = $_POST['first_name'];
 $_SESSION['weight2'] = $_POST['weight'];
 $_SESSION['height2'] = $_POST['height'];
 $_SESSION['carer2'] = $_POST['career'];

$sql = "UPDATE user set gender = ? , weight = ? , height = ? WHERE name = 'gordon' ";
$this->db->query($sql,array($_SESSION['name2'],$_SESSION['weight2'],$_SESSION['height2']));
 }

//query information
$query = $this->db->query("SELECT * FROM Fitbit_Data WHERE name = 'Quan Long' ");
$queryForSportAmt =  $this->db->query("SELECT *,(veryActive+moderatelyActive+lightlyActive+sedentaryActive)/4 as mean FROM Fitbit_Activity");
$queryForPI = $this->db->query("SELECT * FROM user where name = 'gordon'");
//global variable for health data
global $arr;
global $arrForDistance;
global $arrForstep;

//global variable for sport amount
global $veryActive;
global $moderatelyActive;
global $lightlyActive;
global $sedentaryActive;
global $mean;


//global variable for personal information summary
global $name;
global $gender;
global $user_age;
global $family_name;
global $weight;
global $height;


foreach($queryForPI->result() as $row)
    {
        $name = $row->name;
        $gender = $row->gender;
        //$user_age = $row->user_age;
        //$family_name = $row->family_name;
        $weight = $row->weight;
        $height = $row->height;
    }

$_SESSION['name'] = $name;
$_SESSION['gender'] = $gender;
//$_SESSION['user_age'] = $user_age;
$_SESSION['family_name'] = "hello";
$_SESSION['weight'] = $weight;
$_SESSION['height'] = $height;


//Operation for health data summary
$arrForstep = array();
$arr = array();
$arrForDistance = array();
$posts = array();
$response = array();
$mean = array();


foreach ($query->result() as $row)
{
   array_push($arr,$row->caloriesOut,$row->distance);
   array_push($arrForDistance,$row->distance);
   array_push($arrForstep,$row->steps);
   $posts[] = array('Calories Out'=> $row->caloriesOut, 'Distance'=> $row->distance);
}

//operation for Sport Amount

 $veryActive = array();
 $moderatelyActive = array();
 $lightlyActive = array() ;
 $sedentaryActive = array();

foreach($queryForSportAmt->result() as $row){
    array_push($veryActive,$row->veryActive);
    array_push($moderatelyActive,$row->moderatelyActive);
    array_push($lightlyActive,$row->lightlyActive);
    array_push($sedentaryActive,$row->sedentaryActive);
    array_push($mean,$row->mean);
}

?>


</html>
